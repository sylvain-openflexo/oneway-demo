use org.openflexo.technologyadapter.excel.BasicExcelModelSlot;
use org.openflexo.foundation.fml.rt.FMLRTVirtualModelInstanceModelSlot;

/**
 * 
 * @author sylvain
 * @version 0.1
 */
@VirtualModel(uri="file:/Users/sylvain/git/oneway-demo/src/main/resources/OnewayDemo.fml/ConfigurationModel.fml")
public class ConfigurationModel {

  public ExcelWorkbook excel;
  public String identifier;
  public BPMNEditor resolvedBPMN;

  @CreationScheme  
  ConfigurationModel:create(String identifier, ExcelWorkbookResource excelResource) {  
    identifier = parameters.identifier;    
    excel = parameters.excelResource.resourceData;  
  }  

  @ActionScheme  
  Void update() {  
    log "Updating"    
    for (variationPoint : variabilityModel.SelectFlexoConceptInstance(type=VariationPoint)) {    
      log ("variationPoint=" + variationPoint)      
      ExcelRow row = excel.XLS::SelectUniqueExcelRow where=(selected.getExcelCellAt(0).cellValueAsString = variationPoint.targetTask.eObject.id);      
      log ("row=" + row)      
      Configuration.create(variationPoint,row)    
    }  
  }  

  @ActionScheme  
  public Void resolve() {  
    log "Resolve configuration"  
  }  


  @FlexoConcept  
  public class Configuration {  
  
    public VariationPoint variationPoint;  
    public ExcelRow excelRow;  
    public Alternative alternative;  
  
    @CreationScheme    
    Configuration:create(VariationPoint variationPoint, ExcelRow excelRow) {    
      variationPoint = parameters.variationPoint;      
      excelRow = parameters.excelRow;      
      alternative = variabilityModel.SelectUniqueFlexoConceptInstance(type=Alternative,where=where=(selected.identifier = excelRow.getExcelCellAt(2).cellValueAsString));      
      log ("Alternative=" + alternative)      
      log ("variabilityModel=" + variabilityModel)      
      log ("value=" + excelRow.getExcelCellAt(2).cellValueAsString)    
    }    
  
    @DeletionScheme    
    Void delete() {    
      
    }    
  
  }  

}
